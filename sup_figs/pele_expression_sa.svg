<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   class="svglite"
   width="432.00pt"
   height="288.00pt"
   viewBox="0 0 432.00 288.00"
   version="1.1"
   id="svg95084"
   sodipodi:docname="P-ele_expression_sa.svg"
   inkscape:export-filename="../../sup_figs/pele_expression_sa.png"
   inkscape:export-xdpi="600"
   inkscape:export-ydpi="600"
   inkscape:version="1.2.1 (9c6d41e4, 2022-07-14)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview95086"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     inkscape:document-units="pt"
     showgrid="false"
     inkscape:zoom="2.1631944"
     inkscape:cx="272.2825"
     inkscape:cy="214.72873"
     inkscape:window-width="1992"
     inkscape:window-height="1205"
     inkscape:window-x="2240"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="g95082" />
  <defs
     id="defs94878">
    <style
       type="text/css"
       id="style94876"><![CDATA[
    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {
      fill: none;
      stroke: #000000;
      stroke-linecap: round;
      stroke-linejoin: round;
      stroke-miterlimit: 10.00;
    }
    .svglite text {
      white-space: pre;
    }
  ]]></style>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient95568"
       gradientUnits="userSpaceOnUse"
       x="54.889999"
       y="126.74">
      <meshrow
         id="meshrow95570">
        <meshpatch
           id="meshpatch95572">
          <stop
             path="c 4.61,0  9.22,0  13.83,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop95574" />
          <stop
             path="c 0,0  0,0  0,0"
             style="stop-color:#800080;stop-opacity:1"
             id="stop95576" />
          <stop
             path="c -4.61,0  -9.22,0  -13.83,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop95578" />
          <stop
             path="c 0,0  0,0  0,0"
             style="stop-color:#800080;stop-opacity:1"
             id="stop95580" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <rect
     width="100%"
     height="100%"
     style="stroke: none; fill: #FFFFFF;"
     id="rect94880" />
  <defs
     id="defs94885">
    <clipPath
       id="cpMC4wMHw0MzIuMDB8MC4wMHwyODguMDA=">
      <rect
         x="0.00"
         y="0.00"
         width="432.00"
         height="288.00"
         id="rect94882" />
    </clipPath>
  </defs>
  <g
     clip-path="url(#cpMC4wMHw0MzIuMDB8MC4wMHwyODguMDA=)"
     id="g94889">
    <rect
       x="-0.000000000000032"
       y="0.00"
       width="432.00"
       height="288.00"
       style="stroke-width: 1.07; stroke: #FFFFFF; fill: #FFFFFF;"
       id="rect94887" />
  </g>
  <defs
     id="defs94894">
    <clipPath
       id="cpMzcuNzV8NDIyLjA0fDkuOTZ8MjUxLjc4">
      <rect
         x="37.75"
         y="9.96"
         width="384.29"
         height="241.82"
         id="rect94891" />
    </clipPath>
  </defs>
  <g
     clip-path="url(#cpMzcuNzV8NDIyLjA0fDkuOTZ8MjUxLjc4)"
     id="g95002">
    <rect
       x="37.75"
       y="9.96"
       width="384.29"
       height="241.82"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect94896" />
    <polyline
       points="75.18,240.38 105.13,238.96 125.09,231.25 155.03,228.94 188.30,216.30 221.58,227.24 387.93,228.06 "
       style="stroke-width: 2.56; stroke: #B22222; stroke-dasharray: 6.83,6.83,20.49,6.83; stroke-linecap: butt;"
       id="polyline94898" />
    <polyline
       points="55.22,240.79 75.18,229.38 105.13,200.27 125.09,146.38 155.03,28.83 188.30,96.33 221.58,88.04 387.93,99.30 "
       style="stroke-width: 2.56; stroke: #B22222; stroke-linecap: butt;"
       id="polyline94900" />
    <polyline
       points="75.18,240.34 105.13,240.52 125.09,240.12 155.03,237.91 188.30,233.19 221.58,237.53 387.93,235.05 "
       style="stroke-width: 2.56; stroke: #6CA6CD; stroke-dasharray: 6.83,6.83,20.49,6.83; stroke-linecap: butt;"
       id="polyline94902" />
    <polyline
       points="55.22,240.79 75.18,222.75 105.13,226.54 125.09,181.59 155.03,174.69 188.30,135.38 221.58,147.53 387.93,35.86 "
       style="stroke-width: 2.56; stroke: #6CA6CD; stroke-linecap: butt;"
       id="polyline94904" />
    <polyline
       points="75.18,240.62 105.13,238.24 125.09,238.30 155.03,217.59 188.30,221.60 221.58,231.08 387.93,238.10 "
       style="stroke-width: 2.56; stroke: #458B00; stroke-dasharray: 6.83,6.83,20.49,6.83; stroke-linecap: butt;"
       id="polyline94906" />
    <polyline
       points="55.22,240.79 75.18,227.57 105.13,201.83 125.09,165.01 155.03,20.95 188.30,55.58 221.58,102.19 387.93,166.34 "
       style="stroke-width: 2.56; stroke: #458B00; stroke-linecap: butt;"
       id="polyline94908" />
    <circle
       cx="387.93"
       cy="99.30"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94910" />
    <circle
       cx="105.13"
       cy="200.27"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94912" />
    <circle
       cx="125.09"
       cy="146.38"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94914" />
    <circle
       cx="155.03"
       cy="28.83"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94916" />
    <circle
       cx="188.30"
       cy="96.33"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94918" />
    <circle
       cx="221.58"
       cy="88.04"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94920" />
    <circle
       cx="75.18"
       cy="229.38"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94922" />
    <polygon
       points="387.93,30.33 392.72,38.63 383.15,38.63 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94924" />
    <polygon
       points="105.13,221.01 109.91,229.30 100.34,229.30 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94926" />
    <polygon
       points="125.09,176.06 129.88,184.36 120.30,184.36 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94928" />
    <polygon
       points="155.03,169.16 159.82,177.45 150.24,177.45 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94930" />
    <polygon
       points="188.30,129.85 193.09,138.15 183.52,138.15 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94932" />
    <polygon
       points="221.58,142.00 226.36,150.29 216.79,150.29 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94934" />
    <polygon
       points="75.18,217.22 79.97,225.51 70.39,225.51 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94936" />
    <polygon
       points="384.38,169.90 391.49,169.90 391.49,162.79 384.38,162.79 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94938" />
    <polygon
       points="101.57,205.39 108.68,205.39 108.68,198.27 101.57,198.27 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94940" />
    <polygon
       points="121.53,168.57 128.64,168.57 128.64,161.46 121.53,161.46 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94942" />
    <polygon
       points="151.48,24.51 158.59,24.51 158.59,17.40 151.48,17.40 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94944" />
    <polygon
       points="184.75,59.14 191.86,59.14 191.86,52.03 184.75,52.03 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94946" />
    <polygon
       points="218.02,105.75 225.13,105.75 225.13,98.64 218.02,98.64 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94948" />
    <polygon
       points="71.63,231.12 78.74,231.12 78.74,224.01 71.63,224.01 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94950" />
    <circle
       cx="55.22"
       cy="240.79"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94952" />
    <polygon
       points="55.22,235.26 60.01,243.56 50.43,243.56 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94954" />
    <polygon
       points="51.66,244.35 58.77,244.35 58.77,237.24 51.66,237.24 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94956" />
    <circle
       cx="387.93"
       cy="228.06"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94958" />
    <circle
       cx="105.13"
       cy="238.96"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94960" />
    <circle
       cx="125.09"
       cy="231.25"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94962" />
    <circle
       cx="155.03"
       cy="228.94"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94964" />
    <circle
       cx="188.30"
       cy="216.30"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94966" />
    <circle
       cx="221.58"
       cy="227.24"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94968" />
    <circle
       cx="75.18"
       cy="240.38"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle94970" />
    <polygon
       points="387.93,229.52 392.72,237.81 383.15,237.81 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94972" />
    <polygon
       points="105.13,235.00 109.91,243.29 100.34,243.29 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94974" />
    <polygon
       points="125.09,234.59 129.88,242.89 120.30,242.89 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94976" />
    <polygon
       points="155.03,232.38 159.82,240.68 150.24,240.68 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94978" />
    <polygon
       points="188.30,227.66 193.09,235.95 183.52,235.95 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94980" />
    <polygon
       points="221.58,232.00 226.36,240.29 216.79,240.29 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94982" />
    <polygon
       points="75.18,234.81 79.97,243.11 70.39,243.11 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon94984" />
    <polygon
       points="384.38,241.65 391.49,241.65 391.49,234.54 384.38,234.54 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94986" />
    <polygon
       points="101.57,241.79 108.68,241.79 108.68,234.68 101.57,234.68 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94988" />
    <polygon
       points="121.53,241.86 128.64,241.86 128.64,234.75 121.53,234.75 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94990" />
    <polygon
       points="151.48,221.14 158.59,221.14 158.59,214.03 151.48,214.03 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94992" />
    <polygon
       points="184.75,225.15 191.86,225.15 191.86,218.04 184.75,218.04 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94994" />
    <polygon
       points="218.02,234.63 225.13,234.63 225.13,227.52 218.02,227.52 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94996" />
    <polygon
       points="71.63,244.18 78.74,244.18 78.74,237.06 71.63,237.06 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon94998" />
    <rect
       x="37.75"
       y="9.96"
       width="384.29"
       height="241.82"
       style="stroke-width: 1.07; stroke: #333333;"
       id="rect95000" />
  </g>
  <g
     clip-path="url(#cpMC4wMHw0MzIuMDB8MC4wMHwyODguMDA=)"
     id="g95082">
    <text
       x="32.82"
       y="243.94"
       text-anchor="end"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="4.90px"
       lengthAdjust="spacingAndGlyphs"
       id="text95004">0</text>
    <text
       x="32.82"
       y="163.25"
       text-anchor="end"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="4.90px"
       lengthAdjust="spacingAndGlyphs"
       id="text95006">5</text>
    <text
       x="32.82"
       y="82.56"
       text-anchor="end"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="9.79px"
       lengthAdjust="spacingAndGlyphs"
       id="text95008">10</text>
    <polyline
       points="35.01,240.79 37.75,240.79 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95010" />
    <polyline
       points="35.01,160.10 37.75,160.10 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95012" />
    <polyline
       points="35.01,79.40 37.75,79.40 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95014" />
    <polyline
       points="55.22,254.52 55.22,251.78 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95016" />
    <polyline
       points="138.40,254.52 138.40,251.78 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95018" />
    <polyline
       points="221.58,254.52 221.58,251.78 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95020" />
    <polyline
       points="304.76,254.52 304.76,251.78 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95022" />
    <polyline
       points="387.93,254.52 387.93,251.78 "
       style="stroke-width: 1.07; stroke: #333333; stroke-linecap: butt;"
       id="polyline95024" />
    <text
       x="55.22"
       y="263.02"
       text-anchor="middle"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="4.90px"
       lengthAdjust="spacingAndGlyphs"
       id="text95026">0</text>
    <text
       x="138.40"
       y="263.02"
       text-anchor="middle"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="9.79px"
       lengthAdjust="spacingAndGlyphs"
       id="text95028">25</text>
    <text
       x="221.58"
       y="263.02"
       text-anchor="middle"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="9.79px"
       lengthAdjust="spacingAndGlyphs"
       id="text95030">50</text>
    <text
       x="304.76"
       y="263.02"
       text-anchor="middle"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="9.79px"
       lengthAdjust="spacingAndGlyphs"
       id="text95032">75</text>
    <text
       x="387.93"
       y="263.02"
       text-anchor="middle"
       style="font-size: 8.80px;fill: #4D4D4D; font-family: &quot;Arial&quot;;"
       textLength="14.69px"
       lengthAdjust="spacingAndGlyphs"
       id="text95034">100</text>
    <text
       x="229.89"
       y="275.60"
       text-anchor="middle"
       style="font-size: 11.00px; font-family: &quot;Arial&quot;;"
       textLength="52.00px"
       lengthAdjust="spacingAndGlyphs"
       id="text95036">generation</text>
    <text
       transform="translate(17.85,130.87) rotate(-90)"
       text-anchor="middle"
       style="font-size: 11.00px; font-family: &quot;Arial&quot;;"
       textLength="86.82px"
       lengthAdjust="spacingAndGlyphs"
       id="text95038">expression [rpkm]</text>
    <rect
       x="47.68"
       y="10.62"
       width="72.36"
       height="130.24"
       style="stroke-width: 0.00; fill: #FFFFFF;"
       id="rect95040" />
    <rect
       x="47.68"
       y="10.62"
       width="44.96"
       height="68.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95042" />
    <rect
       x="53.16"
       y="21.58"
       width="17.28"
       height="17.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95044" />
    <line
       x1="54.89"
       y1="30.22"
       x2="68.72"
       y2="30.22"
       style="stroke-width: 2.56; stroke: #B22222; stroke-linecap: butt;"
       id="line95046" />
    <circle
       cx="61.80"
       cy="30.22"
       r="3.56"
       style="stroke-width: 0.71; stroke: none; fill: #B22222;"
       id="circle95048" />
    <rect
       x="53.16"
       y="38.86"
       width="17.28"
       height="17.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95050" />
    <line
       x1="54.89"
       y1="47.50"
       x2="68.72"
       y2="47.50"
       style="stroke-width: 2.56; stroke: #6CA6CD; stroke-linecap: butt;"
       id="line95052" />
    <polygon
       points="61.80,41.97 66.59,50.26 57.02,50.26 "
       style="stroke-width: 0.71; stroke: none; fill: #6CA6CD;"
       id="polygon95054" />
    <rect
       x="53.16"
       y="56.14"
       width="17.28"
       height="17.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95056" />
    <line
       x1="54.89"
       y1="64.78"
       x2="68.72"
       y2="64.78"
       style="stroke-width: 2.56; stroke: #458B00; stroke-linecap: butt;"
       id="line95058" />
    <polygon
       points="58.25,68.33 65.36,68.33 65.36,61.22 58.25,61.22 "
       style="stroke-width: 0.71; stroke: none; fill: #458B00;"
       id="polygon95060" />
    <text
       x="75.92"
       y="33.37"
       style="font-size: 8.80px; font-family: &quot;Arial&quot;;"
       textLength="11.25px"
       lengthAdjust="spacingAndGlyphs"
       id="text95062">R1</text>
    <text
       x="75.92"
       y="50.65"
       style="font-size: 8.80px; font-family: &quot;Arial&quot;;"
       textLength="11.25px"
       lengthAdjust="spacingAndGlyphs"
       id="text95064">R2</text>
    <text
       x="75.92"
       y="67.93"
       style="font-size: 8.80px; font-family: &quot;Arial&quot;;"
       textLength="11.25px"
       lengthAdjust="spacingAndGlyphs"
       id="text95066">R3</text>
    <rect
       x="47.68"
       y="89.86"
       width="72.36"
       height="51.00"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95068" />
    <rect
       x="53.16"
       y="100.82"
       width="17.28"
       height="17.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95070" />
    <line
       x1="54.89"
       y1="109.46"
       x2="68.72"
       y2="109.46"
       style="stroke-width: 2.56; stroke-linecap: butt;"
       id="line95072" />
    <rect
       x="53.16"
       y="118.10"
       width="17.28"
       height="17.28"
       style="stroke-width: 1.07; stroke: none; fill: #FFFFFF;"
       id="rect95074" />
    <line
       x1="54.89"
       y1="126.74"
       x2="68.72"
       y2="126.74"
       style="stroke-width:2.56;stroke-dasharray:7.67999983,2.55999995;stroke-linecap:butt;fill-opacity:1;fill:url(#meshgradient95568);stroke-dashoffset:0"
       id="line95076" />
    <text
       x="75.92"
       y="112.61"
       style="font-size: 8.80px; font-family: &quot;Arial&quot;;"
       textLength="24.96px"
       lengthAdjust="spacingAndGlyphs"
       id="text95078">Sense</text>
    <text
       x="75.92"
       y="129.89"
       style="font-size: 8.80px; font-family: &quot;Arial&quot;;"
       textLength="38.64px"
       lengthAdjust="spacingAndGlyphs"
       id="text95080">Antisense</text>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
